#!/bin/bash

# This script starts all components of Mon(IoT)r: tcpdump capture, mitm, and mirroring.

CURRENT_DIR="$(dirname "$(readlink -f "$0")")"
source $CURRENT_DIR/../lib/moniotr-constants

function usage()
{
    echo "Usage: $ME <start|stop|restart|status>"
}

function help()
{
    echo "This script manages the activation status of all the subcomponents of the Mon(IoT)r system."
    echo "Currently the following services will be controlled: networking, tcpdump, and mitm."
    echo "Modifications done by this script are not persistent across restarts."
    echo
    usage
    echo
    echo "start         Immediately starts all the components of Mon(IoT)r."
    echo
    echo "stop          Immediately stops all the components of Mon(IoT)r. "
    echo
    echo "restart       Immediately restarts all the components of Mon(IoT)r. "
    echo
    echo "status        Query the current status of all the components of Mon(IoT)r."
}

function moniotr-start
{
    $CURRENT_DIR/networking-ctrl start
    if [ $MITMPROXY_AUTOSTART == "true" ]; then
        $CURRENT_DIR/mitm-ctrl start
    fi
    $CURRENT_DIR/tcpdump-ctrl start
}

function moniotr-stop
{
    $CURRENT_DIR/networking-ctrl stop
    $CURRENT_DIR/mitm-ctrl stop
    $CURRENT_DIR/tcpdump-ctrl stop
}

function moniotr-status
{
    $CURRENT_DIR/networking-ctrl status && STATUS="1"
    $CURRENT_DIR/mitm-ctrl status && STATUS="1"
    $CURRENT_DIR/tcpdump-ctrl status && STATUS="1"

    exit $STATUS
}

if [ "$1" == "start" ]; then
    moniotr-start
elif [ "$1" == "stop" ]; then
    moniotr-stop
elif [ "$1" == "status" ]; then
    moniotr-status
    exit "$?"
elif [ "$1" == "restart" ]; then
    moniotr-stop
    moniotr-start
else
    help
fi
